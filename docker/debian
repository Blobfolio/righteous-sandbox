# Righteous Sandbox: Debian Bullseye
#
# This is a crude containerized build environment that moots the need to
# install things like Node, PHPUnit, etc., locally.
#
# It should contain *most* needed tools out of the box, but being based
# on Debian stable, anything else is just an `apt-fast install` away.
#
# BUILD:
# docker build -t righteous/sandbox:latest -f Dockerfile .
#
# RUN:
# docker run --rm -v $PWD:/share -it --name righteous righteous/sandbox



FROM debian:bullseye

# Labels.
LABEL Name="Righteous Sandbox"

# Binary paths.
ARG b3sum_url=https://github.com/BLAKE3-team/BLAKE3/releases/download/1.3.0/b3sum_linux_x64_bin
ARG	composer_url=https://getcomposer.org/download/2.2.4/composer.phar
ARG	hyperfine_url=https://github.com/sharkdp/hyperfine/releases/download/v1.11.0/hyperfine_1.11.0_amd64.deb
ARG	phpab_url=https://github.com/theseer/Autoload/releases/download/1.27.1/phpab-1.27.1.phar
ARG	phpunit_url=https://phar.phpunit.de/phpunit-9.phar
ARG	watchexec_url=https://github.com/watchexec/watchexec/releases/download/cli-v1.18.4/watchexec-1.18.4-x86_64-unknown-linux-gnu.deb

# Rust requires a few other bits of knowledge to install itself.
ARG rust_version=stable
ENV	RUSTUP_HOME=/usr/local/rustup \
	CARGO_HOME=/usr/local/cargo \
	PATH=/usr/local/cargo/bin:$PATH

# Set it up!
RUN set -eux; \
	mkdir /share \
	&& echo "RSVERSION" > /opt/righteous-sandbox.version \
	&& echo "$( date -u +"%F %T" ) UTC" > /opt/righteous-sandbox.built \
	&& cd /tmp \
	\
	&& echo "hsts=0" > /root/.wgetrc \
	&& apt-get update -qq \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		aria2 \
		bash-completion \
		ca-certificates \
		curl \
		dirmngr \
		gnupg \
		locales \
		lsb-release \
		software-properties-common \
		wget \
	&& sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen \
	&& locale-gen \
	\
	&& wget -q -O - https://packages.sury.org/php/apt.gpg | apt-key add - \
	&& wget -q -O - https://apt.blobfolio.com/assets/apt.blobfolio.com.key | apt-key add - \
	&& wget -q -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \
	&& apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B \
	\
	&& echo "deb https://deb.debian.org/debian bullseye main" > /etc/apt/sources.list \
	&& echo "deb-src https://deb.debian.org/debian bullseye main" >> /etc/apt/sources.list \
	&& echo "deb https://deb.debian.org/debian-security/ bullseye-security main" >> /etc/apt/sources.list \
	&& echo "deb-src https://deb.debian.org/debian-security/ bullseye-security main" >> /etc/apt/sources.list \
	&& echo "deb https://deb.debian.org/debian bullseye-updates main" >> /etc/apt/sources.list \
	&& echo "deb-src https://deb.debian.org/debian bullseye-updates main" >> /etc/apt/sources.list \
	&& echo "deb https://deb.debian.org/debian bullseye-backports main" >> /etc/apt/sources.list \
	&& echo "deb-src https://deb.debian.org/debian bullseye-backports main" >> /etc/apt/sources.list \
	\
	&& echo "deb https://apt.blobfolio.com/ bullseye main" > /etc/apt/sources.list.d/blobfolio.list \
	&& echo "deb https://packages.sury.org/php/ bullseye main" > /etc/apt/sources.list.d/php.list \
	&& echo "deb http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main" > /etc/apt/sources.list.d/apt-fast.list \
	&& echo "deb https://deb.nodesource.com/node_14.x bullseye main" > /etc/apt/sources.list.d/node.list \
	\
	&& apt-get update -qq \
	&& echo debconf apt-fast/maxdownloads string 4 | debconf-set-selections \
	&& echo debconf apt-fast/dlflag boolean true | debconf-set-selections \
	&& echo debconf apt-fast/aptmanager string apt-get | debconf-set-selections \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y apt-fast \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-fast install -y --no-install-recommends \
		autoconf \
		automake \
		bc \
		bison \
		brotli \
		build-essential \
		bzip2 \
		cargo-bashman \
		channelz \
		checksame \
		cmake \
		devscripts \
		dpkg-dev \
		dpkg-sig \
		fd-find \
		file \
		flaca \
		flex \
		fyi \
		g++ \
		gcc \
		git \
		gnuplot \
		guff \
		htminl \
		inkscape \
		jq \
		just \
		less \
		libaom-dev \
		libbz2-dev \
		librust-gtk-dev \
		librust-gdk-dev \
		libssl-dev \
		libzip-dev \
		make \
		man \
		mariadb-server \
		mold \
		meson \
		nasm \
		ninja-build \
		nodejs \
		openssh-client \
		p7zip-full \
		parallel \
		patch \
		php-getid3 \
		php-pear \
		php-php-gettext \
		php-phpseclib \
		php8.0-bcmath \
		php8.0-bz2 \
		php8.0-cli \
		php8.0-common \
		php8.0-curl \
		php8.0-gd \
		php8.0-gmp \
		php8.0-imap \
		php8.0-intl \
		php8.0-mbstring \
		php8.0-mysql \
		php8.0-opcache \
		php8.0-readline \
		php8.0-xml \
		php8.0-yaml \
		php8.0-zip \
		pkg-config \
		procps \
		rargs \
		rsync \
		ruby \
		sass \
		sassc \
		sd \
		serse \
		sqlite3 \
		sudo \
		unzip \
		valgrind \
		vim \
		webp \
		whiptail \
		wp-cli \
		xz-utils \
		yasm \
		yesvgmap \
		zip \
	\
	&& wget -q -O /tmp/hyperfine.deb $hyperfine_url \
	&& dpkg -i /tmp/hyperfine.deb \
	&& rm /tmp/hyperfine.deb \
	\
	&& wget -q -O /tmp/watchexec.deb $watchexec_url \
	&& dpkg -i /tmp/watchexec.deb \
	&& rm /tmp/watchexec.deb \
	\
	&& wget -q -O /tmp/rustup.sh https://sh.rustup.rs \
	&& chmod +x /tmp/rustup.sh \
	&& /tmp/rustup.sh -y --profile minimal --default-toolchain $rust_version \
	\
	&& rustup component add clippy \
	&& rustup component add llvm-tools-preview \
	&& rustup component add rustfmt \
	&& DEBIAN_FRONTEND=noninteractive apt-fast install -y righteous-cargo \
	&& rm -rf /usr/local/cargo/registry/* \
	&& cd /usr/local/rustup/toolchains \
	&& tar -cvJf ../stable.tar.xz stable-x86_64-unknown-linux-gnu \
	&& rm -rf stable-x86_64-unknown-linux-gnu \
	&& cd /tmp \
    \
    && npm set cache /tmp/npm-cache \
	&& npm set package-lock false \
	&& npm set save false \
	&& npm set unsafe-perm true \
	&& npm update -g npm \
	&& npm install -g \
		csso-cli \
		eslint \
		eslint-plugin-jsdoc \
		google-closure-compiler \
		grunt-cli \
		svgo \
		terser \
	\
	&& wget -q -O /usr/bin/b3sum $b3sum_url \
	&& chmod 755 /usr/bin/b3sum \
	\
	&& wget -q -O /usr/bin/composer $composer_url \
	&& chmod 755 /usr/bin/composer \
	\
	&& wget -q -O /usr/bin/phpab $phpab_url \
	&& chmod 755 /usr/bin/phpab \
	\
	&& wget -q -O /usr/bin/phpunit $phpunit_url \
	&& chmod 755 /usr/bin/phpunit \
	\
	&& mkdir /opt/phpcs \
	&& wget -q -O /tmp/phpcs.tar.gz https://apt.blobfolio.com/other/blobfolio-phpcs.tar.gz \
	&& tar -C /opt/phpcs -xvf /tmp/phpcs.tar.gz \
	&& ln -s /opt/phpcs/lib/vendor/bin/phpcs /usr/bin/phpcs \
	&& ln -s /opt/phpcs/lib/vendor/bin/phpcbf /usr/bin/phpcbf \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-get purge software-properties-common -y \
	&& DEBIAN_FRONTEND=noninteractive apt-get autoremove --purge -y \
	\
	&& apt-get clean -y \
	&& composer clear \
	&& rm -rf \
		/root/.composer \
		/root/.config \
		/tmp/* \
		/var/lib/apt/lists/* \
		/var/log/*

# Copy setup files.
COPY setup/.vimrc setup/.bashrc setup/.profile /root/
COPY setup/entrypoint.sh /opt/entrypoint.sh

VOLUME /usr/local/cargo/registry
VOLUME /usr/local/rustup/toolchains

# This is how it begins.
WORKDIR /share
ENTRYPOINT /opt/entrypoint.sh
CMD /bin/bash
