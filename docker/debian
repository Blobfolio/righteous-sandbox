# Righteous Sandbox: Debian Buster
#
# This is a crude containerized build environment that moots the need to
# install things like Node, PHPUnit, etc., locally.
#
# It should contain *most* needed tools out of the box, but being based
# on Debian stable, anything else is just an `apt-fast install` away.
#
# BUILD:
# docker build -t righteous/sandbox:latest -f Dockerfile .
#
# RUN:
# docker run --rm -v $PWD:/share -it --name righteous righteous/sandbox



FROM debian:buster

# Labels.
LABEL Name="Righteous Sandbox"

# Binary paths.
ARG	composer_url=https://getcomposer.org/download/1.10.10/composer.phar
ARG	hyperfine_url=https://github.com/sharkdp/hyperfine/releases/download/v1.10.0/hyperfine_1.10.0_amd64.deb
ARG	ninja_url=https://github.com/ninja-build/ninja/releases/download/v1.10.0/ninja-linux.zip
ARG	phpab_url=https://github.com/theseer/Autoload/releases/download/1.25.9/phpab-1.25.9.phar
ARG	phpunit_url=https://phar.phpunit.de/phpunit-9.phar
ARG	watchexec_url=https://github.com/watchexec/watchexec/releases/download/1.14.0/watchexec-1.14.0-x86_64-unknown-linux-gnu.deb

# Rust requires a few other bits of knowledge to install itself.
ARG rust_version=1.46.0
ENV	RUSTUP_HOME=/usr/local/rustup \
	CARGO_HOME=/usr/local/cargo \
	PATH=/usr/local/cargo/bin:$PATH

# Set it up!
RUN set -eux; \
	mkdir /share \
	&& echo "RSVERSION" > /opt/righteous-sandbox.version \
	&& echo "$( date -u +"%F %T" ) UTC" > /opt/righteous-sandbox.built \
	&& cd /tmp \
	\
	&& echo "hsts=0" > /root/.wgetrc \
	&& apt-get update -qq \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
		apt-transport-https \
		aria2 \
		bash-completion \
		ca-certificates \
		curl \
		dirmngr \
		gnupg \
		locales \
		lsb-release \
		software-properties-common \
		wget \
	&& sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen \
	&& locale-gen \
	\
	&& wget -q -O - https://packages.sury.org/php/apt.gpg | apt-key add - \
	&& wget -q -O - https://apt.blobfolio.com/apt.blobfolio.com.key | apt-key add - \
	&& wget -q -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \
	&& apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A2166B8DE8BDC3367D1901C11EE2FF37CA8DA16B \
	\
	&& echo "deb http://ftp.us.debian.org/debian/ buster main" > /etc/apt/sources.list \
	&& echo "deb-src http://ftp.us.debian.org/debian/ buster main" >> /etc/apt/sources.list \
	&& echo "deb http://security.debian.org/ buster/updates main" >> /etc/apt/sources.list \
	&& echo "deb-src http://security.debian.org/ buster/updates main" >> /etc/apt/sources.list \
	&& echo "deb http://ftp.us.debian.org/debian/ buster-updates main" >> /etc/apt/sources.list \
	&& echo "deb-src http://ftp.us.debian.org/debian/ buster-updates main" >> /etc/apt/sources.list \
	&& echo "deb http://ftp.us.debian.org/debian buster-backports main" >> /etc/apt/sources.list \
	&& echo "deb-src http://ftp.us.debian.org/debian buster-backports main" >> /etc/apt/sources.list \
	\
	&& echo "deb https://apt.blobfolio.com/debian/ buster main" > /etc/apt/sources.list.d/blobfolio.list \
	&& echo "deb https://packages.sury.org/php/ buster main" > /etc/apt/sources.list.d/php.list \
	&& echo "deb http://ppa.launchpad.net/apt-fast/stable/ubuntu bionic main" > /etc/apt/sources.list.d/apt-fast.list \
	&& echo "deb https://deb.nodesource.com/node_13.x buster main" > /etc/apt/sources.list.d/node.list \
	\
	&& apt-get update -qq \
	&& echo debconf apt-fast/maxdownloads string 4 | debconf-set-selections \
	&& echo debconf apt-fast/dlflag boolean true | debconf-set-selections \
	&& echo debconf apt-fast/aptmanager string apt-get | debconf-set-selections \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y apt-fast \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-fast install -y --no-install-recommends \
		autoconf \
		automake \
		bc \
		bison \
		brotli \
		build-essential \
		bzip2 \
		channelz \
		cmake \
		devscripts \
		dpkg-dev \
		dpkg-sig \
		fd-find \
		file \
		flaca \
		flex \
		fyi \
		g++ \
		gcc \
		git \
		gnuplot \
		help2man \
		htminl \
		inkscape \
		jq \
		just \
		less \
		libbz2-dev \
		libssl-dev \
		libzip-dev \
		make \
		man \
		mariadb-server \
		nasm \
		nodejs \
		openssh-client \
		p7zip-full \
		parallel \
		patch \
		pkg-config \
		php-pear \
		php-php-gettext \
		php-phpseclib \
		php7.3-bcmath \
		php7.3-bz2 \
		php7.3-cli \
		php7.3-common \
		php7.3-curl \
		php7.3-gd \
		php7.3-gmp \
		php7.3-imap \
		php7.3-intl \
		php7.3-json \
		php7.3-mbstring \
		php7.3-mysql \
		php7.3-opcache \
		php7.3-readline \
		php7.3-xml \
		php7.3-zip \
		procps \
		rargs \
		rsync \
		ruby \
		sass \
		sassc \
		sd \
		sudo \
		unzip \
		vim \
		webp \
		whiptail \
		wp-cli \
		xz-utils \
		yasm \
		zip \
	\
	&& wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh \
	&& chmod 755 /tmp/llvm.sh \
	&& /tmp/llvm.sh 9 \
	&& rm /tmp/llvm.sh \
	\
	&& wget -q -O /tmp/hyperfine.deb $hyperfine_url \
	&& dpkg -i /tmp/hyperfine.deb \
	&& rm /tmp/hyperfine.deb \
	\
	&& wget -q -O /tmp/watchexec.deb $watchexec_url \
	&& dpkg -i /tmp/watchexec.deb \
	&& rm /tmp/watchexec.deb \
	\
	&& wget -q -O /tmp/ninja.zip $ninja_url \
	&& cd /tmp \
	&& unzip ninja.zip \
	&& mv ninja /usr/bin/ninja \
	&& chmod 755 /usr/bin/ninja \
	\
	&& wget -q -O /tmp/rustup.sh https://sh.rustup.rs \
	&& chmod +x /tmp/rustup.sh \
	&& /tmp/rustup.sh -y --profile minimal --default-toolchain $rust_version \
	\
	&& rustup component add clippy \
	&& rustup component add llvm-tools-preview \
	&& rustup component add rustfmt \
	&& DEBIAN_FRONTEND=noninteractive apt-fast install -y righteous-cargo \
	&& rm -rf /usr/local/cargo/registry \
    \
    && npm set cache /tmp/npm-cache \
	&& npm set package-lock false \
	&& npm set save false \
	&& npm set unsafe-perm true \
	&& npm update -g npm \
	&& npm install -g \
		csso-cli \
		eslint \
		eslint-plugin-jsdoc \
		google-closure-compiler \
		grunt \
		grunt-cli \
		grunt-contrib-sass \
		grunt-sass \
		html-minifier \
		marked \
		node-gyp \
		node-sass \
		onchange \
		stylecow \
		svgo \
		terser \
		uglify-es \
		yarn \
	\
	&& wget -q -O /usr/bin/composer $composer_url \
	&& chmod 755 /usr/bin/composer \
	\
	&& wget -q -O /usr/bin/phpab $phpab_url \
	&& chmod 755 /usr/bin/phpab \
	\
	&& wget -q -O /usr/bin/phpunit $phpunit_url \
	&& chmod 755 /usr/bin/phpunit \
	\
	&& mkdir /opt/phpcs \
	&& wget -q -O /tmp/phpcs.tar.gz https://apt.blobfolio.com/other/blobfolio-phpcs.tar.gz \
	&& tar -C /opt/phpcs -xvf /tmp/phpcs.tar.gz \
	&& ln -s /opt/phpcs/lib/vendor/bin/phpcs /usr/bin/phpcs \
	&& ln -s /opt/phpcs/lib/vendor/bin/phpcbf /usr/bin/phpcbf \
	\
	&& DEBIAN_FRONTEND=noninteractive apt-get purge software-properties-common -y \
	&& DEBIAN_FRONTEND=noninteractive apt-get autoremove --purge -y \
	\
	&& apt-get clean -y \
	&& composer clear \
	&& rm -rf \
		/root/.composer \
		/root/.config \
		/tmp/* \
		/var/lib/apt/lists/* \
		/var/log/*

# Copy setup files.
COPY setup/.vimrc setup/.bashrc setup/.profile /root/
COPY setup/entrypoint.sh /opt/entrypoint.sh

# This is how it begins.
WORKDIR /share
ENTRYPOINT /opt/entrypoint.sh
CMD /bin/bash
